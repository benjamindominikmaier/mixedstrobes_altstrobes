xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mp, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = sc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
minstrobes
results_coll %>% filter(method == "minstrobes" & strobe_fraction == 100)
results_coll %>% filter(method == "minstrobes" & strobe_fraction == 0)
results_coll %>% filter(method == "minstrobes" & strobe_fraction == 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 500)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 10000)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 2000)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 1500)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 1200)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylab("Expected Island Size [bp]")
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylab("Expected Island Size [bp]")+
ylim(0, 1200)
results_uniqueness <- read.table(file = "../output/data tables/uniqueness.csv", header = TRUE, sep = ",")
results_uniqueness
results_uniqueness$Method = factor(results_uniqueness$Method, levels=c('kmers', 'mixedminstrobes2', 'mixedminstrobes3', 'mixedhybridstrobes2', 'mixedhybridstrobes3', 'mixedrandstrobes2', 'mixedrandstrobes3', 'mixedaltstrobes2'))
ggplot(results_uniqueness %>% filter(Method != "kmers"))+
geom_line(aes(x = k, y = unique, group= strobefraction, col = strobefraction))+
facet_wrap(~ Method)+
scale_color_viridis(discrete = FALSE, option = "B")+
ylab("% unique")+
scale_x_continuous(limits = c(18, 36))
ggsave("../output/figs/[Fig4] uniqueness_mixed.png", width = 6, height = 4.4)
p <- ggplot(results_sim %>% filter(!protocol %in% c("spaced_kmers_dense", "spaced_kmers_sparse")) %>% filter(order == 2) )+
geom_point(aes(x = 100*strobe_fraction, y = matches, col = protocol, shape = protocol))+
geom_line(aes(x = 100*strobe_fraction, y = matches, col = protocol))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Matches [%]")+
facet_wrap(~mutation_rate, scales = "free")
library(tidyverse)
library(data.table)
results_sim <- read.table(file = "../output/data tables/matching_analysis_simulated", sep = "&", header = F)
colnames(results_sim) <- c("protocol", "order", "setting", "strobe_fraction", "matches", "sequence_coverage", "match_coverage", "gaps", "mutation_rate")
results_sim <- results_sim %>% mutate(protocol = gsub("mixed", "", protocol))
results_sim$protocol <- factor(results_sim$protocol, levels = c("kmers", "minstrobes", "hybridstrobes", "randstrobes", "altstrobes", "spaced_kmers_dense", "spaced_kmers_sparse"))
results_sim
p <- ggplot(results_sim %>% filter(!protocol %in% c("spaced_kmers_dense", "spaced_kmers_sparse")) %>% filter(order == 2) )+
geom_point(aes(x = 100*strobe_fraction, y = matches, col = protocol, shape = protocol))+
geom_line(aes(x = 100*strobe_fraction, y = matches, col = protocol))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Matches [%]")+
facet_wrap(~mutation_rate, scales = "free")
p +
scale_x_continuous(sec.axis = sec_axis(~ . , name = "Mutation Rate", breaks = NULL, labels = NULL))
ggsave("../output/figs/[Fig2] Matches (order2).png", height = 3, width = 7)
p <- ggplot(results_sim %>% filter(!protocol %in% c("spaced_kmers_dense", "spaced_kmers_sparse")) %>% filter(order == 2) )+
geom_point(aes(x = 100*strobe_fraction, y = sequence_coverage, col = protocol, shape = protocol))+
geom_line(aes(x = 100*strobe_fraction, y = sequence_coverage, col = protocol))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Sequence Coverage [%]")+
facet_wrap(~mutation_rate, scales = "free")
p +
scale_x_continuous(sec.axis = sec_axis(~ . , name = "Mutation Rate", breaks = NULL, labels = NULL))
ggsave("../output/figs/[Fig2] Sequence Coverage (order2).png", height = 3, width = 7)
p <- ggplot(results_sim %>% filter(!protocol %in% c("spaced_kmers_dense", "spaced_kmers_sparse")) %>% filter(order == 2) )+
geom_point(aes(x = 100*strobe_fraction, y = match_coverage, col = protocol, shape = protocol))+
geom_line(aes(x = 100*strobe_fraction, y = match_coverage, col = protocol))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Match Coverage [%]")+
facet_wrap(~mutation_rate, scales = "free")
p +
scale_x_continuous(sec.axis = sec_axis(~ . , name = "Mutation Rate", breaks = NULL, labels = NULL))
ggsave("../output/figs/[Fig2] Match Coverage (order2).png", height = 3, width = 7)
p <- ggplot(results_sim %>% filter(!protocol %in% c("spaced_kmers_dense", "spaced_kmers_sparse")) %>% filter(order == 2) )+
geom_point(aes(x = 100*strobe_fraction, y = gaps, col = protocol, shape = protocol))+
geom_line(aes(x = 100*strobe_fraction, y = gaps, col = protocol))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Expected Island Size [bp]")+
facet_wrap(~mutation_rate, scales = "free")
p +
scale_x_continuous(sec.axis = sec_axis(~ . , name = "Mutation Rate", breaks = NULL, labels = NULL))
ggsave("../output/figs/[Fig2] Expected Island Size (order2).png", height = 3, width = 7)
library("tidyverse")
library(viridis)
results_uniqueness <- read.table(file = "../output/data tables/uniqueness.csv", header = TRUE, sep = ",")
results_uniqueness <- read.table(file = "../output/data tables/uniqueness.csv", header = TRUE, sep = ",")
results_uniqueness
results_uniqueness$Method = factor(results_uniqueness$Method, levels=c('kmers', 'mixedminstrobes2', 'mixedminstrobes3', 'mixedhybridstrobes2', 'mixedhybridstrobes3', 'mixedrandstrobes2', 'mixedrandstrobes3', 'mixedaltstrobes2'))
ggplot(results_uniqueness %>% filter(Method != "kmers"))+
geom_line(aes(x = k, y = unique, group= strobefraction, col = strobefraction))+
facet_wrap(~ Method)+
scale_color_viridis(discrete = FALSE, option = "B")+
ylab("% unique")+
scale_x_continuous(limits = c(18, 36))
ggsave("../output/figs/[Fig4] uniqueness_mixed.png", width = 6, height = 4.4)
library(tidyverse)
library(data.table)
altstrobes <- read.table("../output/data tables/matching_analysis_bio_collinear/minstrobe (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 100)
colMeans(altstrobes)
altstrobes
colMeans(altstrobes[V2:V7])
colMeans(altstrobes["V2":"V7"])
mean(altstrobes$V2)
mean(altstrobes$V3)
mean(altstrobes$V4)
mean(altstrobes$V5)
mean(altstrobes$V6)
mean(altstrobes$V7)
altstrobes
altstrobes <- read.table("../output/data tables/matching_analysis_bio_collinear/altstrobe (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 100)
altstrobes
mean(altstrobes$V3)
mean(altstrobes$V4)
mean(altstrobes$V5)
mean(altstrobes$V6)
mean(altstrobes$V2)
mean(altstrobes$V3)
altstrobes
mean(altstrobes$V3/2)
mean(altstrobes$V4)
altstrobes
mean(altstrobes$V3)
mean(altstrobes$V4)
mean(altstrobes$V5)
mean(altstrobes$V4)
mean(altstrobes$V3)
library(tidyverse)
library(data.table)
kmers <- read.table("../output/data tables/matching_analysis_bio_collinear/kmers (Summary).txt", sep="&") %>% mutate(method = "kmers", strobe_fraction = 0)
mixedrandstrobes10 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe10 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 10)
mixedrandstrobes20 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe20 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 20)
mixedrandstrobes30 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe30 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 30)
mixedrandstrobes40 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe40 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 40)
mixedrandstrobes50 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe50 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 50)
mixedrandstrobes60 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe60 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 60)
mixedrandstrobes70 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe70 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 70)
mixedrandstrobes80 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe80 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 80)
mixedrandstrobes90 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedrandstrobe90 (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 90)
randstrobes <- read.table("../output/data tables/matching_analysis_bio_collinear/randstrobe (Summary).txt", sep="&") %>% mutate(method = "randstrobes", strobe_fraction = 100)
mixedhybridstrobes10 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe10 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 10)
mixedhybridstrobes20 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe20 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 20)
mixedhybridstrobes30 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe30 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 30)
mixedhybridstrobes40 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe40 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 40)
mixedhybridstrobes50 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe50 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 50)
mixedhybridstrobes60 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe60 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 60)
mixedhybridstrobes70 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe70 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 70)
mixedhybridstrobes80 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe80 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 80)
mixedhybridstrobes90 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedhybridstrobe90 (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 90)
hybridstrobes <- read.table("../output/data tables/matching_analysis_bio_collinear/hybridstrobe (Summary).txt", sep="&") %>% mutate(method = "hybridstrobes", strobe_fraction = 100)
mixedminstrobes10 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe10 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 10)
mixedminstrobes20 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe20 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 20)
mixedminstrobes30 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe30 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 30)
mixedminstrobes40 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe40 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 40)
mixedminstrobes50 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe50 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 50)
mixedminstrobes60 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe60 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 60)
mixedminstrobes70 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe70 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 70)
mixedminstrobes80 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe80 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 80)
mixedminstrobes90 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedminstrobe90 (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 90)
minstrobes <- read.table("../output/data tables/matching_analysis_bio_collinear/minstrobe (Summary).txt", sep="&") %>% mutate(method = "minstrobes", strobe_fraction = 100)
mixedaltstrobes10 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe10 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 10)
mixedaltstrobes20 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe20 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 20)
mixedaltstrobes30 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe30 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 30)
mixedaltstrobes40 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe40 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 40)
mixedaltstrobes50 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe50 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 50)
mixedaltstrobes60 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe60 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 60)
mixedaltstrobes70 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe70 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 70)
mixedaltstrobes80 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe80 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 80)
mixedaltstrobes90 <- read.table("../output/data tables/matching_analysis_bio_collinear/mixedaltstrobe90 (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 90)
altstrobes <- read.table("../output/data tables/matching_analysis_bio_collinear/altstrobe (Summary).txt", sep="&") %>% mutate(method = "altstrobes", strobe_fraction = 100)
results_coll <- rbind(
kmers,
mixedhybridstrobes10, mixedhybridstrobes20, mixedhybridstrobes30, mixedhybridstrobes40, mixedhybridstrobes50,
mixedhybridstrobes60, mixedhybridstrobes70, mixedhybridstrobes80, mixedhybridstrobes90, hybridstrobes,
mixedminstrobes10, mixedminstrobes20, mixedminstrobes30, mixedminstrobes40, mixedminstrobes50,
mixedminstrobes60, mixedminstrobes70, mixedminstrobes80, mixedminstrobes90, minstrobes,
mixedrandstrobes10, mixedrandstrobes20, mixedrandstrobes30, mixedrandstrobes40, mixedrandstrobes50,
mixedrandstrobes60, mixedrandstrobes70, mixedrandstrobes80, mixedrandstrobes90, randstrobes,
mixedaltstrobes10, mixedaltstrobes20, mixedaltstrobes30, mixedaltstrobes40, mixedaltstrobes50,
mixedaltstrobes60, mixedaltstrobes70, mixedaltstrobes80, mixedaltstrobes90, altstrobes,
) %>% rename("query" = "V1", "length" = "V2", "mp" = "V3", "sc" = "V4", "mc" = "V5", "esize" = "V6", "coll_esize" = "V7")
results_coll <- rbind(
kmers,
mixedhybridstrobes10, mixedhybridstrobes20, mixedhybridstrobes30, mixedhybridstrobes40, mixedhybridstrobes50,
mixedhybridstrobes60, mixedhybridstrobes70, mixedhybridstrobes80, mixedhybridstrobes90, hybridstrobes,
mixedminstrobes10, mixedminstrobes20, mixedminstrobes30, mixedminstrobes40, mixedminstrobes50,
mixedminstrobes60, mixedminstrobes70, mixedminstrobes80, mixedminstrobes90, minstrobes,
mixedrandstrobes10, mixedrandstrobes20, mixedrandstrobes30, mixedrandstrobes40, mixedrandstrobes50,
mixedrandstrobes60, mixedrandstrobes70, mixedrandstrobes80, mixedrandstrobes90, randstrobes,
mixedaltstrobes10, mixedaltstrobes20, mixedaltstrobes30, mixedaltstrobes40, mixedaltstrobes50,
mixedaltstrobes60, mixedaltstrobes70, mixedaltstrobes80, mixedaltstrobes90, altstrobes
) %>% rename("query" = "V1", "length" = "V2", "mp" = "V3", "sc" = "V4", "mc" = "V5", "esize" = "V6", "coll_esize" = "V7")
results_coll
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mp, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = sc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylab("Expected Island Size [bp]")+
ylim(0, 1200)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mp, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 70)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = sc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylab("Expected Island Size [bp]")+
ylim(0, 1200)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mp, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 65)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = sc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = mc, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylim(0, 100)
ggplot(results_coll %>% filter(strobe_fraction == 0 | strobe_fraction == 100), aes(x = length, y = esize, col = method))+
geom_point(alpha = 0.2)+
geom_smooth()+
xlab("Length [bp]")+
ylab("Expected Island Size [bp]")+
ylim(0, 1200)
ggplot(results_coll)+
geom_point(aes(x = 100*strobe_fraction, y = matches, col = protocol))+
geom_line(aes(x = 100*strobe_fraction, y = matches, col = protocol))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
labs(x = "Strobe Fraction [%]",
y = "Matches [%]")
p <- ggplot(results_coll)+
geom_point(aes(x = strobe_fraction, y = mp, col = method))+
geom_line(aes(x = strobe_fraction, y = mp, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
labs(x = "Strobe Fraction [%]",
y = "Matches [%]")
#ggsave("../output/figs/[Fig3] mp.png", height = 3, width = 3)
p <- ggplot(results_coll)+
geom_point(aes(x = strobe_fraction, y = sc, col = method))+
geom_line(aes(x = strobe_fraction, y = sc, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
labs(x = "Strobe Fraction [%]",
y = "Sequence Coverage [%]")
#ggsave("../output/figs/[Fig3] Sequence Coverage.png", height = 3, width = 3)
p <- ggplot(results_coll)+
geom_point(aes(x = strobe_fraction, y = mc, col = method))+
geom_line(aes(x = strobe_fraction, y = mc, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
labs(x = "Strobe Fraction [%]",
y = "Match Coverage [%]")
#ggsave("../output/figs/[Fig3] Match Coverage.png", height = 3, width = 3)
p <- ggplot(results_coll)+
geom_point(aes(x = strobe_fraction, y = esize, col = method))+
geom_line(aes(x = strobe_fraction, y = esize, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
labs(x = "Strobe Fraction [%]",
y = "Expected Island Size")
#ggsave("../output/figs/[Fig3] Expected Island Size.png", height = 3, width = 3)
ggplot(results_coll)+
geom_point(aes(x = strobe_fraction, y = mp, col = method))+
geom_line(aes(x = strobe_fraction, y = mp, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
labs(x = "Strobe Fraction [%]",
y = "Matches [%]")
results_coll %>% group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = mean(mp), sc = mean(sc), mc = mean(mc), esize = mean(esize))
results_coll_summarized <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = mean(mp), sc = mean(sc), mc = mean(mc), esize = mean(esize))
results_coll_summarized2 <- results_coll %>% rowwise %>%
mutate(mp * length/sum(length), sc * length/sum(length), mc * length/sum(length), esize * length/sum(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll_summarized
results_coll_summarized2
results_coll_summarized2 <- results_coll %>%
mutate(mp * length/sum(length), sc * length/sum(length), mc * length/sum(length), esize * length/sum(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll_summarized
results_coll_summarized2
results_coll_summarized <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = mean(mp), sc = mean(sc), mc = mean(mc), esize = mean(esize))
results_coll_summarized2 <- results_coll %>%
mutate(mp * length/colSums(length), sc * length/colSums(length), mc * length/colSums(length), esize * length/colSums(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll %>%
mutate(mp * length/colSums(length), sc * length/colSums(length), mc * length/colSums(length), esize * length/colSums(length))
results_coll %>%
mutate(mp * length/sum(length), sc * length/sum(length), mc * length/sum(length), esize * length/sum(length))
results_coll_summarized2 <- results_coll %>%
mutate(mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll_summarized
results_coll_summarized2
results_coll %>%
mutate(mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll_summarized <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = mean(mp), sc = mean(sc), mc = mean(mc), esize = mean(esize))
results_coll_summarized2 <- results_coll %>%
mutate(mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll_summarized
results_coll_summarized2
results_coll %>% group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = mean(mp), sc = mean(sc), mc = mean(mc), esize = mean(esize))
results_coll %>% rowwise %>%
mutate(mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll %>%
mutate(mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length)) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll %>%
mutate(mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length))
results_coll %>%
mutate(weight = length/sum(length), mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length))
results_coll_summarized2 <- results_coll %>%
mutate(weight = length/sum(length), mp = mp * length/sum(length), sc = sc * length/sum(length), mc = mc * length/sum(length), esize = esize * length/sum(length))
colSums(results_coll_summarized2)
sum(results_coll_summarized2$weight)
results_coll %>%
mutate(weight = length/sum(length), mp = mp * weight, sc = sc * weight, mc = mc * weight, esize = esize * weight) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll_summarized2 <- results_coll %>%
mutate(weight = length/sum(length)*41, mp = mp * weight, sc = sc * weight, mc = mc * weight, esize = esize * weight) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize))
results_coll_summarized
results_coll_summarized2
results_coll %>% group_by(method, strobe_fraction) %>% summarise(length = sum(length))
n_protocol <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(tot_length = sum(length))
results_coll %>%
mutate(mp = mp * length, sc = sc * length, mc = mc * length, esize = esize * length) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize)) %>%
left_join(n_protocol, by=c("method", "strobe_fraction")) %>%
mutate(mp = mp/tot_length, sc = sc/tot_length, mc = mc/tot_length, esize = esize/tot_length)
n_protocol <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(tot_length = sum(length))
results_coll_summarized <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = mean(mp), sc = mean(sc), mc = mean(mc), esize = mean(esize))
results_coll_summarized2 <- results_coll %>%
mutate(mp = mp * length, sc = sc * length, mc = mc * length, esize = esize * length) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize)) %>%
left_join(n_protocol, by=c("method", "strobe_fraction")) %>%
mutate(mp = mp/tot_length, sc = sc/tot_length, mc = mc/tot_length, esize = esize/tot_length)
n_protocol <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(tot_length = sum(length))
results_coll_summarized <- results_coll %>%
mutate(mp = mp * length, sc = sc * length, mc = mc * length, esize = esize * length) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize)) %>%
left_join(n_protocol, by=c("method", "strobe_fraction")) %>%
mutate(mp = mp/tot_length, sc = sc/tot_length, mc = mc/tot_length, esize = esize/tot_length)
results_coll <- rbind(
kmers,
mixedhybridstrobes10, mixedhybridstrobes20, mixedhybridstrobes30, mixedhybridstrobes40, mixedhybridstrobes50,
mixedhybridstrobes60, mixedhybridstrobes70, mixedhybridstrobes80, mixedhybridstrobes90, hybridstrobes,
mixedminstrobes10, mixedminstrobes20, mixedminstrobes30, mixedminstrobes40, mixedminstrobes50,
mixedminstrobes60, mixedminstrobes70, mixedminstrobes80, mixedminstrobes90, minstrobes,
mixedrandstrobes10, mixedrandstrobes20, mixedrandstrobes30, mixedrandstrobes40, mixedrandstrobes50,
mixedrandstrobes60, mixedrandstrobes70, mixedrandstrobes80, mixedrandstrobes90, randstrobes,
mixedaltstrobes10, mixedaltstrobes20, mixedaltstrobes30, mixedaltstrobes40, mixedaltstrobes50,
mixedaltstrobes60, mixedaltstrobes70, mixedaltstrobes80, mixedaltstrobes90, altstrobes
) %>% rename("query" = "V1", "length" = "V2", "mp" = "V3", "sc" = "V4", "mc" = "V5", "esize" = "V6", "coll_esize" = "V7")
results_coll$method <- factor(results_coll$method, levels = c("kmers", "minstrobes", "hybridstrobes", "randstrobes", "altstrobes", "spaced_kmers_dense", "spaced_kmers_sparse"))
results_coll
n_protocol <- results_coll %>% group_by(method, strobe_fraction) %>% summarise(tot_length = sum(length))
results_coll_summarized <- results_coll %>%
mutate(mp = mp * length, sc = sc * length, mc = mc * length, esize = esize * length) %>%
group_by(method, strobe_fraction) %>% summarise(length = mean(length), mp = sum(mp), sc = sum(sc), mc = sum(mc), esize = sum(esize)) %>%
left_join(n_protocol, by=c("method", "strobe_fraction")) %>%
mutate(mp = mp/tot_length, sc = sc/tot_length, mc = mc/tot_length, esize = esize/tot_length)
results_coll_summarized$method <- factor(results_coll_summarized$method, levels = c("kmers", "minstrobes", "hybridstrobes", "randstrobes", "altstrobes", "spaced_kmers_dense", "spaced_kmers_sparse"))
p <- ggplot(results_coll_summarized)+
geom_point(aes(x = strobe_fraction, y = mp, col = method, shape = method))+
geom_line(aes(x = strobe_fraction, y = mp, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Matches [%]")
ggsave("../output/figs/[Fig3] mp.png", height = 3, width = 3)
p <- ggplot(results_coll_summarized)+
geom_point(aes(x = strobe_fraction, y = sc, col = method, shape = method))+
geom_line(aes(x = strobe_fraction, y = sc, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Sequence Coverage [%]")
ggsave("../output/figs/[Fig3] Sequence Coverage.png", height = 3, width = 3)
p <- ggplot(results_coll_summarized)+
geom_point(aes(x = strobe_fraction, y = mc, col = method, shape = method))+
geom_line(aes(x = strobe_fraction, y = mc, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Match Coverage [%]")
ggsave("../output/figs/[Fig3] Match Coverage.png", height = 3, width = 3)
p <- ggplot(results_coll_summarized)+
geom_point(aes(x = strobe_fraction, y = esize, col = method, shape = method))+
geom_line(aes(x = strobe_fraction, y = esize, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Expected Island Size")
ggsave("../output/figs/[Fig3] Expected Island Size.png", height = 3, width = 3)
p <- ggplot(results_coll_summarized)+
geom_point(aes(x = strobe_fraction, y = mp, col = method, shape = method))+
geom_line(aes(x = strobe_fraction, y = mp, col = method))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "none")+
scale_shape_manual(values = c(16,22,23,24,25))+
labs(x = "Strobe Fraction [%]",
y = "Matches [%]")
ggsave("../output/figs/[Fig3] Matches.png", height = 3, width = 3)
results_coll_summarized %>% filter(method = "altstrobe")
results_coll_summarized %>% filter(method = "altstrobes")
results_coll_summarized %>% filter(method == "altstrobes")
results_coll_summarized %>% filter(method == "kmers")
results_coll_summarized %>% filter(method == "altstrobes")
